# This is a Docker Compose file for a microservices architecture
# It includes services for NATS, MongoDB, MinIO, and various application services
# its only for development purposes

services:
  nats-ui:
    depends_on:
      - nats
    image: ghcr.io/nats-nui/nui
    ports:
      - "31311:31311" # Monitoring
    networks:
      - default

  nats:
    image: nats:latest
    ports:
      - "8222:8222" # Monitoring
    command: ["-js"] # Enable JetStream
    networks:
      - default
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:8222/"]
      interval: 10s
      timeout: 3s
      retries: 5

  chat-service:
    depends_on:
      - nats
      - logstash
    build:
      context: .
      dockerfile: cmd/chat-service/Dockerfile
    networks:
      - default

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - default

  gateway:
    depends_on:
      - nats
      - logstash
    build:
      context: .
      dockerfile: cmd/gateway/Dockerfile
    networks:
      - default

  user-service:
    depends_on:
      - nats
      - logstash
      - mongo
    build:
      context: .
      dockerfile: cmd/user-service/Dockerfile
    networks:
      - default

  minio:
    image: quay.io/minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: access-key-id
      MINIO_ROOT_PASSWORD: secret-access-key
    networks:
      - default
    command: server /data --console-address ":9001"

  angebot-service:
    depends_on:
      - mongo
      - logstash
    build:
      context: .
      dockerfile: cmd/angebot-service/Dockerfile
    networks:
      - default

  rating-service:
    depends_on:
      - nats
      - logstash
      - mongo
    build:
      context: .
      dockerfile: cmd/rating-service/Dockerfile
    networks:
      - default

  tracking-service:
    depends_on:
      - logstash
      - nats
      - angebot-service
      - user-service
    build:
      context: .
      dockerfile: cmd/tracking-service/Dockerfile
    networks:
      - default

  media-service:
    depends_on:
      - logstash
      - nats
      - minio
    build:
      context: .
      dockerfile: cmd/media-service/Dockerfile
    networks:
      - default

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./cmd/frontend/static:/app/cmd/frontend/static
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend

  frontend:
    build:
      context: .
      dockerfile: cmd/frontend/Dockerfile
    ports:
      - "8080:8080"
    networks:
      - default

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - ./logging_data:/usr/share/elasticsearch/data:rw
    networks:
      - default

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - default

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.4
    volumes:
      - ./logging/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    networks:
      - default
    environment:
      - LS_JAVA_OPTS=-Xms1g -Xmx1g
volumes:
  mongo-data:

networks:
  default:
